name: Run tox

on:
    pull_request:
    push:
      branches:
        - main
jobs:
  tests_basic:
    name: Basic tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:

    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        pip install tox-gh-actions

    - name: Lint
      if: ${{matrix.python-version == '3.10'}}
      run: |
        tox -e lint

    - name: Run tests for all Pythons
      run: |
        tox -e unit

    - name: Run coverage
      if: ${{matrix.python-version == '3.10'}}
      run: |
        tox -e coverage

    - name: Upload to codecov
      if: ${{matrix.python-version == '3.10'}}
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false
        files: ./coverage.xml
        flags: pytest
        name: "connectome-manipulator-py310"

  tests_functional:
    name: Functional tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']
    steps:

    - uses: actions/checkout@v4

    - uses: actions/checkout@v4
      with:
        repository: BlueBrain/parquet-converters
        path: parquet-converters
        submodules: true

    - name: Set up Apache Arrow repositories
      run: |
        sudo apt-get update
        sudo apt-get install -y ca-certificates lsb-release wget
        wget https://apache.jfrog.io/artifactory/arrow/$(lsb_release --id --short | tr 'A-Z' 'a-z')/apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
        sudo apt-get install -y ./apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
        sudo apt-get update

    - name: Install build dependencies
      run: |
        sudo apt-get install -y cmake g++ libhdf5-openmpi-dev librange-v3-dev ninja-build nlohmann-json3-dev
        sudo apt-get install -y libarrow-dev libparquet-dev

    - name: Install test dependencies
      run: |
        sudo apt-get install -y hdf5-tools

    - name: Configure and build
      run: |
        cd parquet-converters
        cmake -B build -S . -GNinja \
          -DCMAKE_INSTALL_PREFIX=$PWD/install \
          -DCMAKE_CXX_COMPILER=$(which mpicxx)
        cmake --build build
        ctest --test-dir build --output-on-failure
        cmake --install build
        echo "parquet2hdf5 --version: $(./install/bin/parquet2hdf5 --version)"
        echo "$PWD/install/bin" >> $GITHUB_PATH

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        pip install tox-gh-actions

    - name: Run tox
      run: |
        tox -e functional
        tox -e integration
